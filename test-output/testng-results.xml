<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="4" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-26T09:13:28 IST" name="Suite" finished-at="2022-09-26T09:13:40 IST" duration-ms="12207">
    <groups>
    </groups>
    <test started-at="2022-09-26T09:13:28 IST" name="TestLocal" finished-at="2022-09-26T09:13:40 IST" duration-ms="12207">
      <class name="script.Test2">
        <test-method is-config="true" signature="openApp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:script.Test2@7674f035]" started-at="2022-09-26T09:13:35 IST" name="openApp" finished-at="2022-09-26T09:13:40 IST" duration-ms="4891" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void script.Test2.testB()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testB()[pri:2, instance:script.Test2@7674f035]" started-at="2022-09-26T09:13:40 IST" name="testB" finished-at="2022-09-26T09:13:40 IST" duration-ms="52" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [CONTACT ME] but found [CONTACT US]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [CONTACT ME] but found [CONTACT US]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at script.Test2.testB(Test2.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.Test2@7674f035]" started-at="2022-09-26T09:13:40 IST" name="closeApp" finished-at="2022-09-26T09:13:40 IST" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testB status=FAILURE method=Test2.testB()[pri:2, instance:script.Test2@7674f035] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.Test2 -->
      <class name="script.Test1">
        <test-method is-config="true" signature="initReport()[pri:0, instance:script.Test1@78e4deb0]" started-at="2022-09-26T09:13:28 IST" name="initReport" finished-at="2022-09-26T09:13:28 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initReport -->
        <test-method is-config="true" signature="openApp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:script.Test1@78e4deb0]" started-at="2022-09-26T09:13:28 IST" name="openApp" finished-at="2022-09-26T09:13:34 IST" duration-ms="6072" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void script.Test1.testA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testA()[pri:1, instance:script.Test1@78e4deb0]" started-at="2022-09-26T09:13:34 IST" name="testA" finished-at="2022-09-26T09:13:35 IST" duration-ms="575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.Test1@78e4deb0]" started-at="2022-09-26T09:13:35 IST" name="closeApp" finished-at="2022-09-26T09:13:35 IST" duration-ms="193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA status=SUCCESS method=Test1.testA()[pri:1, instance:script.Test1@78e4deb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="publishReport()[pri:0, instance:script.Test1@78e4deb0]" started-at="2022-09-26T09:13:40 IST" name="publishReport" finished-at="2022-09-26T09:13:41 IST" duration-ms="265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publishReport -->
      </class> <!-- script.Test1 -->
    </test> <!-- TestLocal -->
  </suite> <!-- Suite -->
</testng-results>
